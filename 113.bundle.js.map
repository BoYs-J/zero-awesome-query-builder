{"version":3,"file":"113.bundle.js","mappings":"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A,EACvC,EACDoM,gBAAiB,SAACpM,GAChB,MAAO,CAACA,EAAIrS,MAAO,GACpB,EACD8B,QAAS,gBAAE9B,EAAF,EAAEA,MAAOiC,EAAT,EAASA,SAAT,OACP,yBACE4G,KAAK,OACL7I,MAAOA,GAAS,GAChB+R,SAAU,SAAAN,GAAC,OAAIxP,EAASwP,EAAEC,OAAO1R,MAAtB,GAJN,IAoYX0e,MAzXY,CACZzC,KAAM,CACJ0C,gBAAiB,QACjBC,WAAY,OACZ5d,QAAS,CACPib,KAAM,CACJ7E,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,YACA,WACA,eACA,UACA,eAEFhT,YAAa,CAAC,EACdya,QAAS,CAAC,GAEZhC,SAAU,CACRzF,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,WACA,eACA,UACA,eAEFhT,YAAa,CAAC,EACdya,QAAS,CAAC,GAEZtb,MAAO,CACL6T,UAAW,CAET,QACA,YACA,gBAKR0F,OAAQ,CACN6B,gBAAiB,QACjBC,WAAY,SACZ5d,QAAS,CACP8b,OAAQ,CACN1F,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJnD,OAAQ,CACNmD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKRkG,KAAM,CACJqB,gBAAiB,QACjB3d,QAAS,CACPsc,KAAM,CACJlG,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRwG,KAAM,CACJe,gBAAiB,QACjB3d,QAAS,CACP4c,KAAM,CACJxG,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRgH,SAAU,CACRO,gBAAiB,QACjB3d,QAAS,CACPod,SAAU,CACRhH,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRvV,OAAQ,CACN+c,WAAY,SACZD,gBAAiB,gBACjB3d,QAAS,CACPa,OAAQ,CACNuV,UAAW,CACT,gBACA,oBAGA,UACA,eAEFhT,YAAa,CACX1D,YAAa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","sources":["webpack://react-awesome-query-builder-demo-local/../modules/components/operators/Proximity.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/WidgetFactory.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/Widget.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/utils.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/ValueField.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/FuncSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/FuncWidget.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/index.js","webpack://react-awesome-query-builder-demo-local/../modules/config/basic.js","webpack://react-awesome-query-builder-demo-local/../modules/config/default.js","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialAutocomplete.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialFieldAutocomplete.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialValueSources.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/index.js","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialText.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialTextArea.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialDate.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialDateTime.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialTime.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialNumber.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialSlider.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialRange.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialBoolean.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialMultiSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialFieldSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialButton.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialButtonGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialConjs.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialSwitch.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialConfirm.jsx","webpack://react-awesome-query-builder-demo-local/../modules/config/material/index.js","webpack://react-awesome-query-builder-demo-local/../modules/hooks/useListValuesAutocomplete.jsx","webpack://react-awesome-query-builder-demo-local/../modules/constants.js","webpack://react-awesome-query-builder-demo-local/../modules/stores/tree.js","webpack://react-awesome-query-builder-demo-local/../modules/stores/context.js","webpack://react-awesome-query-builder-demo-local/../modules/actions/tree.js","webpack://react-awesome-query-builder-demo-local/../modules/actions/group.js","webpack://react-awesome-query-builder-demo-local/../modules/actions/rule.js","webpack://react-awesome-query-builder-demo-local/../modules/actions/drag.js","webpack://react-awesome-query-builder-demo-local/../modules/components/Query.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/QueryContainer.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/containers/RuleContainer.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/containers/Draggable.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/Operator.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/OperatorWrapper.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/Field.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/FieldWrapper.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/OperatorOptions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/Rule.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/containers/GroupContainer.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/GroupActions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/Group.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/RuleGroupActions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/RuleGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/RuleGroupExtActions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/RuleGroupExt.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/SwitchGroupActions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/SwitchGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/CaseGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/Item.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/containers/SortableContainer.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/Builder.jsx","webpack://react-awesome-query-builder-demo-local/../modules/export/queryBuilder.js","webpack://react-awesome-query-builder-demo-local/../modules/export/jsonLogic.js","webpack://react-awesome-query-builder-demo-local/../modules/export/mongoDb.js","webpack://react-awesome-query-builder-demo-local/../modules/export/sql.js","webpack://react-awesome-query-builder-demo-local/../modules/export/spel.js","webpack://react-awesome-query-builder-demo-local/../modules/export/queryString.js","webpack://react-awesome-query-builder-demo-local/../modules/export/elasticSearch.js","webpack://react-awesome-query-builder-demo-local/../modules/import/tree.js","webpack://react-awesome-query-builder-demo-local/../modules/import/jsonLogic.js","webpack://react-awesome-query-builder-demo-local/../modules/import/spel.js","webpack://react-awesome-query-builder-demo-local/../modules/config/funcs.js","webpack://react-awesome-query-builder-demo-local/../modules/index.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/autocomplete.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/configUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/defaultUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/export.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/funcUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/reactUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/ruleUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/stuff.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/treeUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/uuid.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/validation.js","webpack://react-awesome-query-builder-demo-local/../node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const Select = widgets.select.factory;\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {getTitleInListValues} from \"../../utils/stuff\";\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n    \n  let value = isSpecialRange \n    ? [immValue.get(0), immValue.get(1)] \n    : (immValue ? immValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = Object.assign({}, fieldWidgetProps, fieldSettings, {\n    config: config,\n    field: field,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  });\n    \n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (fieldSettings.listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(fieldSettings.listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(fieldSettings.listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps);\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig\n} from \"../../utils/configUtils\";\nimport {\n  getValueSourcesForFieldOp, getWidgetsForFieldOp, getWidgetForFieldOp, getValueLabel\n} from \"../../utils/ruleUtils\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport Immutable from \"immutable\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport {Col} from \"../utils\";\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.string,\n    // for RuleGroupExt\n    isForRuleGruop: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values, \n    isForRuleGruop, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGruop || isCaseValue) {\n      iValueSrcs = Immutable.List([valueSrcs]);\n      iValues = Immutable.List([values]);\n    }\n\n    const fieldDefinition = getFieldConfig(config, field);\n    const defaultWidget = getWidgetForFieldOp(config, field, operator);\n    const _widgets = getWidgetsForFieldOp(config, field, operator);\n    const operatorDefinition = isFuncArg ? funcArgDummyOpDef : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    const valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition, isFuncArg ? leftField : null);\n\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className=\"widget--widget\">\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources: ValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className=\"widget--sep\" >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst ConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm() : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, ConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getFieldConfig} from \"../../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} from \"../../utils/ruleUtils\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nimport clone from \"clone\";\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    let expectedType;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    if (isFuncArg && fieldDefinition) {\n      expectedType = fieldDefinition.type;\n    } else if (widget) {\n      let widgetConfig = config.widgets[widget];\n      let widgetType = widgetConfig.type;\n      //expectedType = leftFieldConfig.type;\n      expectedType = widgetType;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = rightFieldConfig.type == expectedType && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getFieldConfig, getFuncConfig} from \"../../utils/configUtils\";\nimport {\n  getFieldPath, getFuncPathLabels, getFieldPathLabels, getValueSourcesForFieldOp, getWidgetForFieldOp\n} from \"../../utils/ruleUtils\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nimport clone from \"clone\";\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\"];\n    const keysForMeta = [\"config\", \"field\", \"value\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentFuncs}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, operator, canUseFuncForField, parentFuncs);\n    const items = this.buildOptions(config, filteredFuncs);\n    return items;\n  }\n\n  getMeta({config, field, value}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPath(selectedFuncKey, config);\n    const selectedPath = getFieldPath(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n    \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, operator, canUseFuncForField, parentFuncs) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    let expectedType;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    if (widget) {\n      let widgetConfig = config.widgets[widget];\n      let widgetType = widgetConfig.type;\n      //expectedType = leftFieldConfig.type;\n      expectedType = widgetType;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = funcConfig.returnType == expectedType;\n          if (leftFieldConfig.funcs)\n            canUse = canUse && leftFieldConfig.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (parentFuncs && parentFuncs.includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, path = null, optGroupLabel = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(funcs).map(funcKey => {\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, funcKey, config);\n      const partsLabels = getFuncPathLabels(funcKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n      const subpath = (path ? path : []).concat(funcKey);\n\n      if (func.type == \"!struct\") {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items: this.buildOptions(config, func.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = Array.isArray(funcKey) ? funcKey : funcKey.split(fieldSeparator);\n    let label = funcOpts.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport {\n  getFuncConfig\n} from \"../../utils/configUtils\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../../utils/funcUtils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FuncWidget extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValue(this.props.value, argKey, argVal, argDefinition, config) );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config) );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, operator, customProps, value, readonly, parentFuncs, id, groupId} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, operator, customProps, readonly, parentFuncs,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition;\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends PureComponent {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  setValue = (_delta, value, _widgetType) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {funcKey, parentFuncs} = this.props;\n    return (\n      <Widget\n        {...this.props} \n        setValue={this.setValue} \n        setValueSrc={this.setValueSrc} \n        isFuncArg={true}\n        parentFuncs={[...(parentFuncs || []), funcKey]}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport uuid from \"../../../../utils/uuid\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n  const id = uuid(), id2 = uuid();\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input key={id}  type=\"radio\" id={id} value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/>\n    <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{labelYes}</label>\n    <input key={id2}  type=\"radio\" id={id2} value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } />\n    <label style={{display: \"inline\"}} key={id2+\"label\"}  htmlFor={id2}>{labelNo}</label>\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport {mapListValues} from \"../../../../utils/stuff\";\nimport omit from \"lodash/omit\";\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport {mapListValues} from \"../../../../utils/stuff\";\nimport omit from \"lodash/omit\";\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return [\n    <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n    ,\n    <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n  ];\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        return <option disabled={disabled} key={path} value={path}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToLabel = {\n    \"addRuleGroup\": \"+\",\n    \"addRuleGroupExt\": \"+\",\n    \"delGroup\": \"x\",\n    \"delRuleGroup\": \"x\",\n    \"delRule\": \"x\",\n  };\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as Operators from \"../components/operators\";\nimport {SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList} from \"../utils/export\";\nimport {escapeRegExp, getTitleInListValues} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {settings as defaultSettings} from \"../config/default\";\n\nconst {\n  //vanilla\n  VanillaBooleanWidget,\n  VanillaTextWidget,\n  VanillaTextAreaWidget,\n  VanillaDateWidget,\n  VanillaTimeWidget,\n  VanillaDateTimeWidget,\n  VanillaMultiSelectWidget,\n  VanillaSelectWidget,\n  VanillaNumberWidget,\n  VanillaSliderWidget,\n\n  //common\n  ValueFieldWidget,\n  FuncWidget\n} = Widgets;\nconst { ProximityOperator } = Operators;\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lt\", v => v, false),\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lte\", v => v, false),\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", v => v, false),\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gte\", v => v, false),\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \".contains\",\n    spelOps: [\"matches\", \".contains\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) : undefined), false),\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) : undefined), true),\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".startsWith\",\n    spelOps: [\"matches\", \".startsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? \"^\" + escapeRegExp(v) : undefined), false),\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".endsWith\",\n    spelOps: [\"matches\", \".endsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) + \"$\" : undefined), false),\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], false),\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], true),\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const empty = sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", (v, fieldDef) => [mongoEmptyValue(fieldDef), null], false),\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const empty = sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", (v, fieldDef) => [mongoEmptyValue(fieldDef), null], false),\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => null, false),\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => null, false),\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    spelOp: \"$contains\", // tip: $ means first arg is object\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", v => v, false),\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", v => v, false),\n    reversedOp: \"select_any_in\",\n  },\n  //todo: multiselect_contains - for SpEL it would be `.containsAll`\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \".equals\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = SqlString.trim(val1);\n      const aVal2 = SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      factory: (props) => <ProximityOperator {...props} />,\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", v => 0, false),\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => 0, false),\n  }\n};\n\n\n//----------------------------  widgets\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    factory: (props) => <VanillaTextWidget {...props} />,\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.spelOp == \"matches\" && op != \"regex\") {\n        let regex;\n        if (op == \"starts_with\") {\n          regex = `(?s)^${escapeRegExp(val)}.*`;\n        } else if (op == \"ends_with\") {\n          regex = `(?s).*${escapeRegExp(val)}$`;\n        } else { // op == 'like'\n          regex = `(?s).*${escapeRegExp(val)}.*`; //tip: can use (?sui) for case-insensitive\n        }\n        return spelEscape(regex);\n      } else {\n        return spelEscape(val);\n      }\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    factory: (props) => <VanillaTextAreaWidget {...props} />,\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return SqlString.escape(val);\n      }\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaNumberWidget {...props} />,\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef) => {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaSliderWidget {...props} />,\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaSelectWidget {...props} />,\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      let valLabel = getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaMultiSelectWidget {...props} />,\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: (vals, fieldDef, wgtDef, isForDisplay) => {\n      let valsLabels = vals.map(v => getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: (vals, fieldDef, wgtDef, op, opDef) => {\n      return vals.map(v => SqlString.escape(v));\n    },\n    spelFormatValue: (vals, fieldDef, wgtDef, op, opDef) => {\n      const isCallable = opDef.spelOp && opDef.spelOp[0] == \"$\";\n      let res = spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaDateWidget {...props} />,\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    useKeyboard: true,\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd').parse('${dateVal.format(\"YYYY-MM-DD\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => moment(val, wgtDef.valueFormat).toDate(),\n    toJS: (val, fieldSettings) => {\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaTimeWidget {...props} />,\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `T(java.time.LocalTime).parse('${dateVal.format(\"HH:mm:ss\")}')`;\n      //return `new java.text.SimpleDateFormat('HH:mm:ss').parse('${dateVal.format(\"HH:mm:ss\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => {\n      // return seconds of day\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: (val, fieldSettings) => {\n      // return seconds of day\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      // return seconds of day\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaDateTimeWidget {...props} />,\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').parse('${dateVal.format(\"YYYY-MM-DD HH:mm:ss\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => moment(val, wgtDef.valueFormat).toDate(),\n    toJS: (val, fieldSettings) => {\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaBooleanWidget {...props} />,\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    factory: (props) => <ValueFieldWidget {...props} />,\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    valueSrc: \"func\",\n    factory: (props) => <FuncWidget {...props} />,\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: (val) => {\n      return spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    factory: ({value, setValue}) =>  \n      <input \n        type=\"text\" \n        value={value || \"\"} \n        onChange={e => setValue(e.target.value)} \n      />\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  formatSpelField: (field, parentField, parts, partsExt, fieldDefinition, config) => {\n    let fieldName = partsExt.map(({key, parent}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `.${key}`;\n        else\n          return `.${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n};\n\n//----------------------------\n\nexport default {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n};\n","import * as Widgets from \"../components/widgets\";\nimport React from \"react\";\nconst {\n  VanillaFieldSelect,\n  VanillaConjs,\n  VanillaButton,\n  VanillaButtonGroup,\n  VanillaProvider,\n  VanillaValueSources,\n  vanillaConfirm,\n  VanillaSwitch,\n} = Widgets;\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n  renderField: (props) => <VanillaFieldSelect {...props} />,\n  renderOperator: (props) => <VanillaFieldSelect {...props} />,\n  renderFunc: (props) => <VanillaFieldSelect {...props} />,\n  renderConjs: (props) => <VanillaConjs {...props} />,\n  renderSwitch: (props) => <VanillaSwitch {...props} />,\n  renderButton: (props) => <VanillaButton {...props} />,\n  renderButtonGroup: (props) => <VanillaButtonGroup {...props} />,\n  renderProvider: (props) => <VanillaProvider {...props} />,\n  renderValueSources: (props) => <VanillaValueSources {...props} />,\n  renderConfirm: vanillaConfirm,\n  renderSwitchPrefix: () => <>{\"Conditions\"}</>,\n\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n  canReorder: true,\n  canRegroup: true,\n  showLock: false,\n  canDeleteLocked: false,\n  showNot: true,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  forceShowConj: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: null,\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"\",\n  notLabel: \"Not\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n  defaultGroupConjunction: \"AND\",\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  }\n};\n","import React from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\nimport useListValuesAutocomplete from \"../../../../hooks/useListValuesAutocomplete\";\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\nconst defaultFilterOptions = createFilterOptions();\nconst emptyArray = [];\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple,\n    value: selectedValue, customProps, readonly, config, groupBy, filterOptionsConfig\n  } = props;\n  const filterOptionsFn = filterOptionsConfig ? createFilterOptions(filterOptionsConfig) : defaultFilterOptions;\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionLabel,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, showCheckboxes, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n  \n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    return (\n      <TextField \n        {...params} \n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={index}\n      classes={classesChip}\n      label={getOptionLabel(option)}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    if (option.specialValue) {\n      return <React.Fragment>{option.renderTitle || option.title}</React.Fragment>;\n    } else if (multiple && showCheckboxes != false) {\n      return <React.Fragment>\n        <Checkbox\n          icon={nonCheckedIcon}\n          checkedIcon={checkedIcon}\n          style={{ marginRight: 8 }}\n          checked={selected}\n        />\n        {option.title}\n      </React.Fragment>;\n    } else {\n      return <React.Fragment>{option.renderTitle || option.title}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, label, disabled, grouplabel} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst filterOptionsConfig = {\n  stringify: (option) => {\n    const keysForFilter = [\"title\", \"value\", \"grouplabel\", \"label\"];\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }\n};\n\nconst fieldAdapter = ({items, selectedKey, setField, ...rest}) => {\n  const listValues = itemsToListValues(items);\n  const groupBy = (option) => option.groupTitle;\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value) return undefined;\n    return setField(value);\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    groupBy,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    value,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props)} />;\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {mapListValues} from \"../../../../utils/stuff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport {mapListValues} from \"../../../../utils/stuff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToOnlyIcon = {\n    \"delGroup\": <DeleteIcon />,\n    \"delRuleGroup\": <DeleteIcon />,\n    \"delRule\": <DeleteIcon />,\n    \"addRuleGroup\": <AddIcon />,\n  };\n  const typeToIcon = {\n    \"addRule\": <AddIcon />,\n    \"addGroup\": <AddIcon />,\n    \"addRuleGroupExt\": <AddIcon />,\n  };\n  const typeToColor = {\n    \"addRule\": \"default\",\n    \"addGroup\": \"primary\",\n    \"delGroup\": \"secondary\",\n    \"delRuleGroup\": \"secondary\",\n    \"delRule\": \"secondary\",\n  };\n  if (typeToOnlyIcon[type])\n    return <IconButton size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]}>{typeToOnlyIcon[type]}</IconButton>;\n  else\n    return <Button size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]} startIcon={typeToIcon[type]}>{label}</Button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import MaterialWidgets from \"../../components/widgets/material\";\nimport BasicConfig, {stringifyForDisplay} from \"../basic\";\nimport React from \"react\";\nimport {SqlString, spelEscape} from \"../../utils/export\";\n\n\nconst {\n  MaterialBooleanWidget,\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialTimeWidget,\n  MaterialDateTimeWidget,\n  MaterialMultiSelectWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialValueSources,\n\n  MaterialProvider,\n  MaterialConfirm,\n  MaterialUseConfirm,\n} = MaterialWidgets;\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props) => props?.customProps?.showSearch \n    ? <MaterialFieldAutocomplete {...props} /> \n    : <MaterialFieldSelect {...props} />,\n  renderOperator: (props) => <MaterialFieldSelect {...props} />,\n  renderFunc: (props) => <MaterialFieldSelect {...props} />,\n  renderConjs: (props) => <MaterialConjs {...props} />,\n  renderSwitch: (props) => <MaterialSwitch {...props} />,\n  renderButton: (props) => <MaterialButton {...props} />,\n  renderButtonGroup: (props) => <MaterialButtonGroup {...props} />,\n  renderValueSources: (props) => <MaterialValueSources {...props} />,\n  renderProvider: (props) => <MaterialProvider {...props} />,\n  renderConfirm: MaterialConfirm,\n  useConfirm: MaterialUseConfirm,\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props) => <MaterialTextWidget {...props} />,\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props) => <MaterialTextAreaWidget {...props} />,\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props) => <MaterialNumberWidget {...props} />,\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props) => {\n      return (props.asyncFetch || props.showSearch) \n        ? <MaterialAutocompleteWidget multiple {...props} /> \n        : <MaterialMultiSelectWidget {...props} />;\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props) => {\n      return (props.asyncFetch || props.showSearch) \n        ? <MaterialAutocompleteWidget {...props} /> \n        : <MaterialSelectWidget {...props} />;\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props) => <MaterialSliderWidget {...props} />,\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props) => <MaterialBooleanWidget {...props} />,\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props) => <MaterialDateWidget {...props} />,\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props) => <MaterialTimeWidget {...props} />,\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props) => <MaterialDateTimeWidget {...props} />,\n  },\n\n  rangeslider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: (props) => <MaterialRangeWidget {...props} />,\n    valueLabel: \"Range\",\n    valuePlaceholder: \"Select range\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    singleWidget: \"slider\",\n    toJS: (val, fieldSettings) => (val),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n  number: {\n    ...BasicConfig.types.number,\n    widgets: {\n      ...BasicConfig.types.number.widgets,\n      rangeslider: {\n        opProps: {\n          between: {\n            isSpecialRange: true,\n          },\n          not_between: {\n            isSpecialRange: true,\n          }\n        },\n        operators: [\n          \"between\",\n          \"not_between\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n};\n\nexport default {\n  ...BasicConfig,\n  types,\n  widgets,\n  settings,\n};","import React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { mapListValues, listValuesToArray } from \"../utils/stuff\";\nimport { mergeListValues, listValueToOption, getListValue } from \"../utils/autocomplete\";\n\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder\n}, {\n  debounceTimeout,\n  multiple\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(true);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (!allowCustomValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValues, listValueToOption);\n  const hasValue = selectedValue != null;\n  // const selectedListValue = hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedOption = listValueToOption(selectedListValue);\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch(filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res && res.values ? res : { values: res };\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  // Unmount\n  React.useEffect(() => {\n    return () => {\n      componentIsMounted.current = false;\n    };\n  }, []);\n\n  // Initial loading\n  React.useEffect(() => {\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = (_e) => {\n    if (isSelectedLoadMore.current) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (_e, option) => {\n    let specialValue = option?.specialValue || option?.value \n      || multiple && option.map(opt => opt?.specialValue || opt?.value).find(v => !!v);\n    if (specialValue == \"LOAD_MORE\") {\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const options = option;\n        let newSelectedListValues = options.map((o, i) => {\n          const item = o.value != null ? o : getListValue(o, listValues);\n          // AntDesign puts array of labels in `_e` (`option` is array of objects, but custom option is always `{}`)\n          // MUI puts array of labels in `option`\n          const customItem = allowCustomValues && !item ? (Array.isArray(_e) ? _e[i] : o) : null;\n          return item || customItem;\n        });\n        let newSelectedValues = newSelectedListValues\n          .filter(o => o !== undefined)\n          .map(o => (o.value !== undefined ? o.value : o));\n        if (!newSelectedValues.length)\n          newSelectedValues = undefined; //not allow []\n        setValue(newSelectedValues, newSelectedListValues);\n      } else {\n        const v = option == null ? undefined : option.value;\n        setValue(v, [option]);\n      }\n    }\n  };\n\n  const onInputChange = async (_e, newInputValue) => {\n    const val = newInputValue;\n    //const isTypeToSearch = e.type == 'change';\n\n    if (val === loadMoreTitle || val === loadingMoreTitle) {\n      return;\n    }\n\n    setInputValue(val);\n\n    if (allowCustomValues) {\n      if (multiple) {\n        //todo\n      } else {\n        setValue(val, [val]);\n      }\n    }\n\n    const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n    if (canSearchAsync) {\n      await loadListValuesDebounced(val);\n    } else if (useAsyncSearch && forceAsyncSearch) {\n      setAsyncListValues([]);\n    }\n  };\n\n  // to keep compatibility with antD\n  const onSearch = async (newInputValue) => {\n    if (newInputValue === \"\" && !open) {\n      return;\n    }\n\n    await onInputChange(null, newInputValue);\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title;\n  };\n\n  return {\n    options,\n    listValues,\n    hasValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    onSearch,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionLabel,\n\n    // unused\n    //selectedListValue,\n    //selectedOption,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","\nimport Immutable from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, defaultOperator, \n  defaultOperatorOptions, defaultRoot, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"../constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(properties || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(it.properties || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge({[from.get(\"id\")]: from});\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config) => {\n  if (!newField)\n    return removeItem(state, path);\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const _currentField = currentProperties.get(\"field\");\n  const _currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = defaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return state;\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n\n    return state;\n  }\n\n  return state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, newField, newOperator, \"field\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n\n    return current\n      .set(\"field\", newField)\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType)\n      .delete(\"asyncListValues\");\n  }));\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS ? values.map(v => fieldWidgetDefinition.toJS(v, fieldWidgetDefinition)) : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField)\n    meta.affectedField = affectedField;\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree) => {\n  const emptyTree = defaultRoot(config);\n  const initTree = tree || emptyTree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      set.tree = setField(state.tree, action.path, action.field, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import React from \"react\";\n\nexport default React.createContext(); ","import uuid from \"../utils/uuid\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport {defaultRuleProperties, defaultGroupProperties} from \"../utils/defaultUtils\";\nimport * as constants from \"../constants\";\nimport Immutable from \"immutable\";\n\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as constants from \"../constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has chnaged from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      onChange && onChange(this.validatedTree, newConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {defaultRoot} from \"../utils/defaultUtils\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    this.getMemoizedConfig = createConfigMemo();\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const tree = props.value;\n    const validatedTree = this.getMemoizedTree(config, tree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree);\n    const store = createStore(reducer);\n\n    this.state = {\n      store,\n      config\n    };\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const oldConfig = this.state.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? nextProps.value || defaultRoot(nextProps) : storeValue;\n\n    if (isConfigChanged) {\n      this.setState({config: nextConfig});\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig);\n      return Promise.resolve().then(() => {\n        this.state.store.dispatch(\n          actions.tree.setTree(nextConfig, validatedTree)\n        );\n      });\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, settings} = this.props;\n    const {config, store} = this.state;\n    const {renderProvider: QueryWrapper} = settings;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {getFieldConfig} from \"../../utils/configUtils\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst classNames = require(\"classnames\");\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Funciton, setField, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nconst classNames = require(\"classnames\");\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        styles = {\n          top: dragging.y,\n          left: dragging.x,\n          width: dragging.w\n        };\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getFieldConfig, getOperatorConfig} from \"../../utils/configUtils\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class Operator extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    const operators = fieldConfig?.operators;\n    const operatorOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorOptions, operators);\n\n    const isOpSelected = !!selectedOperator;\n    const currOp = isOpSelected ? operatorOptions[selectedOperator] : null;\n    const selectedOpts = currOp || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = isOpSelected ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps);\n  }\n\n\n}\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedOperator, setOperator, \n      selectedFieldPartsLabels, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <span>{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getFieldConfig} from \"../../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels} from \"../../utils/ruleUtils\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\n\n\nexport default class Field extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, parentFieldPath);\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts && fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(prefix+fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n      const disabled = field.disabled;\n            \n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      ...this.meta\n    };\n    return renderField(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {config, selectedField, setField, parentField, classname, readonly, id, groupId} = this.props;\n    return (\n      <Col className={classname}>\n        { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.fieldLabel}</label>\n        }\n        <Field\n          config={config}\n          selectedField={selectedField}\n          parentField={parentField}\n          setField={setField}\n          customProps={config.settings.customFieldSelectProps}\n          readonly={readonly}\n          id={id}\n          groupId={groupId}\n        />\n      </Col>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getOperatorConfig} from \"../../utils/configUtils\";\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.string.isRequired,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} from \"../../utils/configUtils\";\nimport {getFieldPathLabels, getValueSourcesForFieldOp} from \"../../utils/ruleUtils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, DragIcon, dummyFn, ConfirmFn} from \"../utils\";\nconst classNames = require(\"classnames\");\n\n\n@RuleContainer\n@Draggable(\"rule\")\n@ConfirmFn\nclass Rule extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const selectedFieldPartsLabels = getFieldPathLabels(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isFieldAndOpSelected = selectedField && selectedOperator && !isSelectedGroup;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = selectedField && !hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = this.props.config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm({...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      });\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentRule() {\n    return !(\n      this.props.selectedField !== null\n            && this.props.selectedOperator !== null\n            && this.props.value.filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  renderField() {\n    const {config, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={this.props.selectedField}\n      setField={!immutableFieldsMode ? this.props.setField : dummyFn}\n      parentField={this.props.parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldPartsLabels={selectedFieldPartsLabels}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, valueError, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      field={this.props.selectedField}\n      parentField={this.props.parentField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={this.props.valueSrc}\n      asyncListValues={this.props.asyncListValues}\n      valueError={valueError}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { showDragIcon } = this.meta;\n\n    return showDragIcon\n        && <span\n          key=\"rule-drag-icon\"\n          className={\"qb-drag-handler rule--drag-handler\"}\n          onMouseDown={this.props.handleDraggerMouseDown}\n        ><DragIcon /> </span>;\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton: Btn,\n      canDeleteLocked\n    } = config.settings;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch: Switch\n    } = config.settings;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup: BtnGrp } = config.settings;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default Rule;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport {defaultGroupConjunction} from \"../../utils/defaultUtils\";\n\n\nconst createGroupContainer = (Group) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Funciton, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      this.props.actions.addRule(this.props.path);\n    };\n\n    // for RuleGroup\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nconst classNames = require(\"classnames\");\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {ConfirmFn, DragIcon, dummyFn} from \"../utils\";\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends PureComponent {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = this.props.config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm({...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      });\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const children = this.props.children1;\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmpty(item) {\n    const isGroup = (item.get(\"type\") == \"group\" || item.get(\"type\") == \"rule_group\");\n    return isGroup ? this.isEmptyGroup(item) : this.isEmptyRule(item);\n  }\n\n  isEmptyGroup(group) {\n    const children = group.get(\"children1\");\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmptyRule(rule) {\n    const properties = rule.get(\"properties\");\n    return !(\n      properties.get(\"field\") !== null\n          && properties.get(\"operator\") !== null\n          && properties.get(\"value\").filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? <BeforeActions {...this.props}/> : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? <AfterActions {...this.props}/> : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.map(this.renderItem).toList() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        //tree={props.tree}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const drag = this.showDragIcon()\n      && <span\n        key=\"group-drag-icon\"\n        className={\"qb-drag-handler group--drag-handler\"}\n        onMouseDown={handleDraggerMouseDown}\n      ><DragIcon /> </span>;\n    return drag;\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs: Conjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return <Conjs {...renderProps} />;\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(ConfirmFn(BasicGroup)));\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {ConfirmFn} from \"../utils\";\n\n\n@GroupContainer\n@Draggable(\"group rule_group\")\n@ConfirmFn\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1.size;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default RuleGroup;\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport {getFieldWidgetConfig, getFieldConfig} from \"../../utils/configUtils\";\nimport Widget from \"../rule/Widget\";\nconst classNames = require(\"classnames\");\n\n\n@GroupContainer\n@Draggable(\"group rule_group_ext\")\n@ConfirmFn\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        filtered[k] = conjunctionOptions[k];\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedOperator={selectedOperator}\n      setField={setField}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGruop={true}\n      field={this.props.selectedField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1.size;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default RuleGroupExt;\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} from \"../../utils/treeUtils\";\nconst classNames = require(\"classnames\");\n\n\n@GroupContainer\n@Draggable(\"group switch_group\")\n@ConfirmFn\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1.size;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1.size;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1.size;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { renderSwitchPrefix } = this.props.config.settings;\n    return renderSwitchPrefix ? renderSwitchPrefix() : null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default SwitchGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nconst classNames = require(\"classnames\");\n\n\n@GroupContainer\n@Draggable(\"group case_group\")\n@ConfirmFn\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\n\nexport default CaseGroup;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties.toObject();\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";\n    const Cmp = typeMap[type + postfix];\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {getFlatTree} from \"../../utils/treeUtils\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../constants\";\nimport clone from \"clone\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n\n      if (maxNesting && newLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Immutable, {Map} from \"immutable\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} from \"../utils/treeUtils\";\nimport uuid from \"../utils/uuid\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\n\n\n@SortableContainer\nexport default class Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = Immutable.List.of(id);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || new Map()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || new Map()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType.toArray();\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const logic = formatItem(item, config, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = config.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    const def = getFieldConfig(config, ff) || {};\n    const parts = ff.split(fieldSeparator);\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(config, parts.slice(0, i+1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  const field = properties.get(\"field\");\n  if (!children) return undefined;\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n  if (conj != \"and\" && conj != \"or\") {\n    meta.errors.push(`Conjunction ${conj} is not supported`);\n    return undefined;\n  }\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField = formatField(meta, config, field, parentField);\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn(...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n  const formattedArgsArr = Object.values(formattedArgs);\n\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn(...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    let fieldName = field;\n    if (fieldDef.fieldName) {\n      fieldName = fieldDef.fieldName;\n    }\n    if (parentField) {\n      const parentFieldDef = getFieldConfig(config, parentField) || {};\n      let parentFieldName = parentField;\n      if (parentFieldDef.fieldName) {\n        parentFieldName = parentFieldDef.fieldName;\n      }\n      if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n        fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn(...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {Map} from \"immutable\";\nimport {settings as defaultSettings} from \"../config/default\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem([], tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const {canShortMongoQuery} = config.settings;\n  if (!children) return undefined;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, true, mode == \"array\" ? (f => `$$el.${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": groupFieldName\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$filter\": {\n            input: \"$\" + groupFieldName,\n            as: \"el\",\n            cond: resultQuery\n          }\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  const fieldName = formatFieldName(field, config, meta, realParentPath);\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let useExpr = false;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  if (_fieldName)\n    useExpr = true;\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  \n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    _fieldName ? _fieldName(fieldName) : fieldName,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn(...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n  \n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn(...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\n\nconst formatFieldName = (field, config, meta, parentPath) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  // if (fieldDef.tableName) { // legacy\n  //     const fieldPartsCopy = [...fieldParts];\n  //     fieldPartsCopy[0] = fieldDef.tableName;\n  //     fieldName = fieldPartsCopy.join(fieldSeparator);\n  // }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n\n  if (parentPath) {\n    const parentFieldDef = getFieldConfig(config, parentPath) || {};\n    let parentFieldName = parentPath;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName+\".\") == 0) {\n      fieldName = fieldName.slice((parentFieldName+\".\").length);\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = Array.isArray(rightField) ? rightField : rightField.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField || defaultSettings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.mongoFunc || funcKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const widget = getWidgetForFieldOp(config, fieldDef, null, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, fieldDef, null, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    argsCnt++;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      lastArg = formattedArgVal;\n    }\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn(...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  if (groupFieldDef.mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatRevOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = formatField(meta, config, field);\n      \n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn(...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField || defaultSettings.formatField;\n  const fieldName = formatFieldName(field, config, meta);\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.sqlFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn(...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, logger} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  const field = properties.get(\"field\");\n  if (!children) return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const getSize = isSpelArray ? \".length\" : \".size()\";\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const objectIsFirstArg = spelOp[0] == \"$\";\n  const isMethod = spelOp[0] == \".\" || objectIsFirstArg;\n  const sop = isMethod ? spelOp.slice(1) : spelOp;\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (isMethod)\n        return `${field}.${sop}()`;\n      else\n        return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (objectIsFirstArg)\n        return `${values}.${sop}(${field})`;\n      else if (isMethod)\n        return `${field}.${sop}(${values})`;\n      else\n        return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn(...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatField(meta, config, field, parentField);\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config, parentField);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  let fieldName = formatFieldName(field, config, meta);\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName;\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable\n    };\n  });\n  const formattedField = formatFieldFn(fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.spelFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn(...args);\n  } else {\n    const args = Object.entries(formattedArgs).map(([k, v]) => v);\n    if (funcName[0] == \".\" && args.length) {\n      const [obj, ...params] = args;\n      ret = `${obj}${funcName}(${params.join(\", \")})`;\n    } else {\n      ret = `${funcName}(${args.join(\", \")})`;\n    }\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(item, config, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = formatField(config, meta, field, isForDisplay, parentField);\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn(...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField || defaultSettings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null);\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = isForDisplay && funcConfig.label || funcKey;\n\n  let formattedArgs = {};\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    const argName = isForDisplay && argConfig.label || argKey;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      formattedArgsWithNames[argName] = formattedArgVal;\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn(...args);\n  } else {\n    const argsStr = Object.entries(formattedArgsWithNames)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return \"must\";\n    // -- AND\n\n  case \"OR\":\n    return \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\nfunction determineQueryField(fieldDataType, fullFieldName, queryType) {\n  if (fieldDataType === \"boolean\") {\n    return fullFieldName;\n  }\n\n  switch (queryType) {\n  case \"term\":\n  case \"wildcard\":\n    return \"\".concat(fullFieldName, \".keyword\");\n\n  case \"geo_bounding_box\":\n  case \"range\":\n  case \"match\":\n    return fullFieldName;\n\n  default:\n    console.error(\"Can't determine query field for query type \".concat(queryType));\n    return null;\n  }\n}\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, recursiveFxn, config) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction);\n  const result = childrenArray.map((c) => recursiveFxn(c, config)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport function elasticSearchFormat(tree, config) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) => \n        buildEsRule(field, [val], operator, config, valueSrc)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, elasticSearchFormat, config);\n  }\n}\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsTreeToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsTreeToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nfunction jsTreeToImmutable(tree) {\n  return fromJS(tree, function (key, value) {\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (key == \"value\" && value.get(0) && value.get(0).toJS !== undefined) {\n      const valueJs = value.get(0).toJS();\n      if (valueJs.func) {\n        outValue = value.toOrderedMap();\n      } else {\n        // only for raw values keep JS representation\n        outValue = Immutable.List.of(valueJs);\n      }\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  let beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertField(op, vals, conv, config, not, meta, parentField) \n      || convertFunc(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertVal(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  let afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertVal = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldConfig.type}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldConfig && fieldConfig.type == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if (fieldConfig && [\"date\", \"datetime\"].includes(fieldConfig.type) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig.fieldSettings && fieldConfig.fieldSettings.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\n\nconst convertField = (op, vals, conv, config, not, meta, parentField = null) => {\n  const {fieldSeparator} = config.settings;\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    let field = vals[0];\n    if (parentField)\n      field = [parentField, field].join(fieldSeparator);\n    field = normalizeField(config, field);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertFunc = (op, vals, conv, config, not, fieldConfig, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? config.funcs[k].returnType == fieldConfig.type : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n    for (const [f, fc] of Object.entries(config.funcs || {})) {\n      if (fc.jsonLogicImport && fc.returnType == fieldConfig.type) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = config.funcs[funcKey];\n    const argKeys = Object.keys(funcConfig.args || {});\n    let args = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      if (argVal === undefined) {\n        argVal = argConfig.defaultValue;\n        if (argVal === undefined) {\n          meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n          return undefined;\n        }\n      }\n      return {...acc, [argKey]: argVal};\n    }, {});\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: args\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.field)\n      .filter(f => f && f.includes(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    const childrenInRuleGroup = Object.values(children)\n      .map(v => v?.properties?.field)\n      .map(f => complexFieldsGroupAncestors[f])\n      .filter(ancs => ancs && ancs.length);\n    const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v.type == \"group\" || v.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field];\n        const groupField = groupAncestors?.at(-1);\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          children1[k] = v;\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = parentField ? parentField.split(fieldSeparator) : [];\n          const isInParent = shallowEqual(parentFieldParts, groupField.split(fieldSeparator).slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map(f => normalizeField(config, f))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\nconst topLevelFieldsFilter = (fields) => {\n  let arr = [...fields].sort((a, b) => (a.length - b.length));\n  for (let i = 0 ; i < arr.length ; i++) {\n    for (let j = i + 1 ; j < arr.length ; j++) {\n      if (arr[j].indexOf(arr[i]) == 0) {\n        // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n        arr.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return arr;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  let errors = [];\n  let res = _parseRule(op, arity, vals, parentField, conv, config, errors, false) \n         || _parseRule(op, arity, vals, parentField, conv, config, errors, true) ;\n\n  if (!res) {\n    meta.errors.push(errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, errors, isRevArgs) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" for multiselect\n  const isAllInForMultiselect = op == \"all\" && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null)\n    cardinality = 0;\n\n  const opk = op + \"/\" + cardinality;\n  const {fieldSeparator} = config.settings;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, args = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    args = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    args = [ vals[0] ];\n  } else {\n    [jlField, ...args] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n  \n  let field, having, isGroup;\n  if (conv.varKeys.includes(k) && typeof v == \"string\") {\n    field = v;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0 && isJsonLogic(acc) && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1 && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\") {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          if (conv.varKeys.includes(k) && typeof v == \"string\") {\n            field = v;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else if (conv.varKeys.includes(k) && typeof v == \"string\") {\n        field = v;\n        isGroup = true;\n      }\n    }\n  }\n  \n  if (!field) {\n    errors.push(`Unknown field ${JSON.stringify(jlField)}`);\n    return;\n  }\n  if (parentField)\n    field = [parentField, field].join(fieldSeparator);\n  field = normalizeField(config, field);\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    errors.push(`No config for field ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      errors.push(`No corresponding ops for field ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if (op == \"all\" && isJsonLogic(vals[1])) {\n    // special case for \"all-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      not = !not;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      res = convertConj(conj, havingVals, conv, config, not, meta, field, true);\n      not = false; // not was applied to group\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, not && canRev, meta, field);\n      if (not && canRev && !rule?.properties?.not) {\n        not = false; // op was reversed in rule\n      }\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    if (not) {\n      Object.assign(res.properties, {\n        not: not,\n      });\n    }\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        asyncListValues,\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger} from \"../utils/stuff\";\nimport moment from \"moment\";\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = convertCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst convertCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => convertCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    const lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\" ;\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    if (isSize || isLength) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    if (lastChild.type == \"method\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        type: \"!func\",\n        obj,\n        methodName: lastChild.val.methodName,\n        args: lastChild.val.args\n      };\n    }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        ...lastChild,\n        obj,\n      };\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => convertCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => convertCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (typeof funcConfig.spelFunc == \"string\") {\n      fk = funcConfig.spelFunc;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n  };\n};\n\nconst convertPath = (parts, meta) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      meta.errors.push(`Unexpected item in compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  const literalTypes = {\n    number: \"number\",\n    string: \"text\",\n    boolean: \"boolean\",\n    null: \"null\" // should not be\n  };\n  \n  const groupFieldParts = parentSpel?._groupField ? [parentSpel?._groupField] : [];\n  if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (!parts) {\n      return undefined;\n    }\n    const fullParts = [...groupFieldParts, ...parts];\n    const isVariable = spel.children?.[0]?.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const fullParts = [...groupFieldParts, spel.val];\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (literalTypes[spel.type]) {\n    let value = spel.val;\n    let valueType = literalTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = \"multiselect\";\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!func\") {\n    const {obj, methodName, args, isVar} = spel;\n    \n    // todo: get from conv\n    const funcToOpMap = {\n      [\".contains\"]: \"like\",\n      [\".startsWith\"]: \"starts_with\",\n      [\".endsWith\"]: \"ends_with\",\n      [\"$contains\"]: \"select_any_in\",\n    };\n\n    const convertedArgs = args.map(v => convertArg(v, conv, config, meta, {\n      ...spel,\n      _groupField: parentSpel?._groupField\n    }));\n\n    //todo: make dynamic: use funcToOpMap and check obj type in basic config\n    if (methodName == \"contains\" && obj && obj[0].type == \"list\") {\n      const convertedObj = obj.map(v => convertArg(v, conv, config, meta, spel));\n      // {'yellow', 'green'}.?[true].contains(color)\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueSrc == \"field\" )) {\n        meta.errors.push(`Expected arg to method ${methodName} to be field but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const field = convertedArgs[0].value;\n      if (!( convertedObj.length == 1 && convertedObj[0].valueType == \"multiselect\" )) {\n        meta.errors.push(`Expected object of method ${methodName} to be inline list but got: ${JSON.stringify(convertedObj)}`);\n        return undefined;\n      }\n      const opKey = funcToOpMap[\"$\"+methodName];\n      const list = convertedObj[0];\n      return buildRule(config, meta, field, opKey, [list]);\n    } else if (funcToOpMap[\".\"+methodName]) {\n      // user.login.startsWith('gg')\n      const opKey = funcToOpMap[\".\"+methodName];\n      const parts = convertPath(obj, meta);\n      if (parts && convertedArgs.length == 1) {\n        const fullParts = [...groupFieldParts, ...parts];\n        const field = fullParts.join(fieldSeparator);\n        return buildRule(config, meta, field, opKey, convertedArgs);\n      }\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!new\" && obj[0].cls.at(-1) == \"SimpleDateFormat\") {\n      // new java.text.SimpleDateFormat('yyyy-MM-dd').parse('2022-01-15')\n      const args = obj[0].args.map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      if (!( args.length == 1 && args[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")}.${methodName} to be 1 string but got: ${JSON.stringify(args)}`);\n        return undefined;\n      }\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const dateFormat = args[0].value;\n      const dateString = convertedArgs[0].value;\n      const valueType = dateFormat.includes(\" \") ? \"datetime\" : \"date\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(dateString, moment.ISO_8601);\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!type\" && obj[0].cls.at(-1) == \"LocalTime\") {\n      // time == T(java.time.LocalTime).parse('02:03:00')\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const timeString = convertedArgs[0].value;\n      const valueType = \"time\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(timeString, \"HH:mm:ss\");\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else {\n      // todo: conv.funcs\n      meta.errors.push(`Unsupported method ${methodName}`);\n    }\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  } else {\n    meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  }\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field: field,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      asyncListValues,\n    }\n  };\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res = {\n    ...(groupFilter || {}),\n    type: \"rule_group\",\n    properties: {\n      ...groupOpRule.properties,\n      ...(groupFilter?.properties || {}),\n      mode\n    }\n  };\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if(!spel) return undefined;\n  let res;\n  if (spel.type.indexOf(\"op-\") == 0) {\n    let op = spel.type.slice(\"op-\".length);\n\n    // unary\n    const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n    if (isUnary) {\n      spel.isUnary = true;\n      return convertToTree(spel.children[0], conv, config, meta, spel);\n    }\n\n    // between\n    let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n    let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n    let isBetween = isBetweenNormal || isBetweenRev;\n    if (isBetween) {\n      const [left, from] = spel.children[0].children;\n      const [right, to] = spel.children[1].children;\n      const isNumbers = from.type == \"number\" && to.type == \"number\";\n      const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n      if (isNumbers && isSameSource) {\n        const _fromValue = from.val;\n        const _toValue = to.val;\n        const oneSpel = {\n          type: \"op-between\",\n          children: [\n            left,\n            from,\n            to\n          ]\n        };\n        return convertToTree(oneSpel, conv, config, meta, parentSpel);\n      }\n    }\n\n    // find op\n    let opKeys = conv.operators[op];\n    let opKey;\n    // todo: make dynamic, use basic config\n    if (op == \"eq\" && spel.children[1].type == \"null\") {\n      opKey = \"is_null\";\n    } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n      opKey = \"is_not_null\";\n    } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKey = \"is_empty\";\n      opKeys = [\"is_empty\"];\n    } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKey = \"is_not_empty\";\n      opKeys = [\"is_not_empty\"];\n    } else if (op == \"between\") {\n      opKey = \"between\";\n      opKeys = [\"between\"];\n    }\n\n    // convert children\n    const convertChildren = () => spel.children.map(child => \n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    \n    if (op == \"and\" || op == \"or\") {\n      const children1 = {};\n      const vals = convertChildren();\n      vals.forEach(v => {\n        if (v) {\n          const id = uuid();\n          v.id = id;\n          if (v.type != undefined) {\n            children1[id] = v;\n          } else {\n            meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n          }\n        }\n      });\n      res = {\n        type: \"group\",\n        id: uuid(),\n        children1,\n        properties: {\n          conjunction: conv.conjunctions[op],\n          not: spel.not\n        }\n      };\n    } else if (opKeys) {\n      const vals = convertChildren();\n      const fieldObj = vals[0];\n      let convertedArgs = vals.slice(1);\n      opKey = opKeys[0];\n      \n      if (!fieldObj) {\n        // LHS can't be parsed\n      } else if (fieldObj.groupFieldValue) {\n        // 1. group\n        if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n          meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n        }\n        const groupField = fieldObj.groupFieldValue.value;\n        \n        // some/all/none\n        const opArg = convertedArgs[0];\n        if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n          // group.?[...].size() == group.size()\n          opKey = \"all\";\n          convertedArgs = [];\n        } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"none\";\n          convertedArgs = [];\n        } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"some\";\n          convertedArgs = [];\n        }\n\n        res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n      } else {\n        // 2. not group\n        if (fieldObj.valueSrc != \"field\") {\n          meta.errors.push(`Expected field ${JSON.stringify(fieldObj)}`);\n        }\n        const field = fieldObj.value;\n\n        if (opKeys.length > 1) {\n          logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}`);\n\n          //todo: it's naive\n          const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n          if (op == \"eq\") {\n            const ws = widgets.find(({op, widget}) => (widget && widget != \"field\"));\n            opKey = ws.op;\n          }\n        }\n        res = buildRule(config, meta, field, opKey, convertedArgs);\n      }\n    } else {\n      if (!parentSpel) {\n        // try to parse whole `\"str\" + prop + #var` as ternary\n        res = buildSimpleSwitch(spel, conv, config, meta);\n      }\n      if (!res) {\n        meta.errors.push(`Can't convert op ${op}`);\n      }\n    }\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  } else {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n    if (res && !res.type && !parentSpel) {\n      // try to parse whole `\"1\"` as ternary\n      const sw = buildSimpleSwitch(spel, conv, config, meta);\n      if (sw) {\n        res = sw;\n      } else {\n        res = undefined;\n        meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n      }\n    }\n  }\n  return res;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n","import moment from \"moment\";\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  //todo: document option `jsonLogicCustomOps`\n  //todo: add util to return all used custom ops to be added by user with `jsonLogic.add_operation`\n  jsonLogicCustomOps: {\n    now: () => new Date(),\n  },\n  spelFunc: \"new java.util.Date()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: (date, val, dim) => moment(date).add(val, dim).toDate()\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  //todo: spel\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\"],\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      }\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      }\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \".toLowerCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: (str) => str.toLowerCase(),\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \".toUpperCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: (str) => str.toUpperCase(),\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","export { default as Query } from \"./components/QueryContainer\";\nexport { default as Builder } from \"./components/Builder\";\n\nimport * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as Widgets from \"./components/widgets/index\";\nimport * as Operators from \"./components/operators\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nconst Utils = {...BasicUtils, ...Export, ...Import};\nexport {Widgets, Operators, Utils, Export, Import, BasicFuncs};\n\nexport {default as BasicConfig} from \"./config/basic\";\n\n","import {listValuesToArray, sleep, mapListValues} from \"./stuff\";\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title}) => search == null ? true : title.toUpperCase().indexOf(search.toUpperCase()) != -1);\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  console.debug(\"simulateAsyncFetch\", {\n    search, offset, values, hasMore, filtered\n  });\n  await sleep(delay);\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues.filter(v => old.find(av => av.value == v.value) == undefined);\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {title, value, disabled, groupTitle, renderTitle} = lv;\n  let option = {title, value};\n  if (disabled)\n    option.disabled = disabled;\n  if (groupTitle)\n    option.groupTitle = groupTitle;\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  return option;\n};\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, (lv) => (lv.value === selectedValue ? lv : null))\n    .filter(v => v !== null)\n    .shift();\n","import merge from \"lodash/merge\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {normalizeListValues, mergeArraysSmart} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\nimport pick from \"lodash/pick\";\n\n\nconst configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\"];\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return (props) => findOrExtend(pickConfig(props));\n};\n\n\n\nexport const extendConfig = (config, configId) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n  \n  config = {...config};\n  config.settings = merge({}, defaultSettings, config.settings);\n  config._fieldsCntByType = {};\n  config._funcsCntByType = {};\n\n  config.types = clone(config.types);\n  _extendTypesConfig(config.types, config);\n\n  config.fields = clone(config.fields);\n  config.__fieldNames = {};\n  _extendFieldsConfig(config.fields, config);\n\n  config.funcs = clone(config.funcs);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  moment.locale(config.settings.locale.moment);\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config) {\n  if (!subconfig) return;\n  for (let funcKey in subconfig) {\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config._funcsCntByType[funcDef.returnType])\n        config._funcsCntByType[funcDef.returnType] = 0;\n      config._funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    if (fieldConfig.fieldSettings.listValues) {\n      fieldConfig.fieldSettings.listValues = normalizeListValues(fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings);\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config._fieldsCntByType[fieldConfig.type])\n        config._fieldsCntByType[fieldConfig.type] = 0;\n      config._fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const computedFieldName = computeFieldName(config, path);\n  if (computedFieldName) {\n    fieldConfig.fieldName = computedFieldName;\n  }\n\n  if (path && fieldConfig.fieldName) {\n    config.__fieldNames[fieldConfig.fieldName] = path;\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config.settings.fieldSeparator;\n  //field = normalizeField(config, field);\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  let l = [...path], r = [], f, fConfig;\n  while ((f = l.pop()) !== undefined && l.length > 0) {\n    r.unshift(f);\n    fConfig = getFieldRawConfig(config, l);\n    if (fConfig.fieldName) {\n      return [fConfig.fieldName, ...r].join(fieldSeparator);\n    }\n  }\n  return null;\n};\n\nexport const normalizeField = (config, field) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const fieldStr = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (config.__fieldNames[fieldStr]) {\n    return config.__fieldNames[fieldStr].join(fieldSeparator);\n  }\n  return fieldStr;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, (objValue, srcValue, _key, _object, _source, _stack) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n  return ret;\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\" && !field.func && !!field.type)\n    return field;\n  if (typeof field == \"object\" && field.func && field.arg)\n    return getFuncArgConfig(config, field.func, field.arg);\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, (objValue, srcValue, _key, _object, _source, _stack) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\n\n\nexport const defaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  return typeof config.settings.defaultField === \"function\"\n    ? config.settings.defaultField(parentRuleGroupPath) \n    : (config.settings.defaultField || (canGetFirst ? getFirstField(config, parentRuleGroupPath) : null));\n};\n\nexport const defaultOperator = (config, field, canGetFirst = true) => {\n  let fieldConfig = getFieldConfig(config, field);\n  let fieldOperators = fieldConfig && fieldConfig.operators || [];\n  let fieldDefaultOperator = fieldConfig && fieldConfig.defaultOperator;\n  if (!fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  let op = typeof config.settings.defaultOperator === \"function\"\n    ? config.settings.defaultOperator(field, fieldConfig) : fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null) => {\n  let field = null, operator = null;\n  const {setDefaultFieldAndOp, showErrorMessage} = config.settings;\n  if (item) {\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (setDefaultFieldAndOp) {\n    field = defaultField(config, true, parentRuleGroupPath);\n    operator = defaultOperator(config, field);\n  }\n  let current = new Immutable.Map({\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap({ ...defaultRule(uuid(), config) }),\n    properties: defaultGroupProperties(config)\n  });\n};\n","let SqlString = require(\"sqlstring\");\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nconst sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nconst mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nconst spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nconst spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nconst spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nconst spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport {\n  SqlString, sqlEmptyValue, \n  mongoEmptyValue, spelEscape, spelFixList, spelFormatConcat, spelImportConcat\n};\n","\nimport {getFieldConfig, getFuncConfig} from \"../utils/configUtils\";\nimport {filterValueSourcesForField} from \"../utils/ruleUtils\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  const _checkFuncValue = (value) => {\n    if (!value)\n      return undefined;\n    const funcKey = value.get(\"func\");\n    const funcConfig = funcKey && getFuncConfig(config, funcKey);\n    if (!funcConfig)\n      return undefined;\n    let complValue = value;\n    let tmpHasOptional = false;\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, isOptional, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const args = complValue.get(\"args\");\n      const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n      const argVal = args ? args.get(argKey) : undefined;\n      const argValue = argVal ? argVal.get(\"value\") : undefined;\n      const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n      if (argValue !== undefined) {\n        const completeArgValue = completeValue(argValue, argValueSrc, config);\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n    return complValue;\n  };\n\n  return _checkFuncValue(value);\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\nconst getUsedFieldsInFuncValue = (value, config) => {\n  let usedFields = [];\n  let badFields = [];\n\n  const _traverse = (value) => {\n    const args = value && value.get(\"args\");\n    if (!args) return;\n    for (const arg of args.values()) {\n      if (arg.get(\"valueSrc\") == \"field\") {\n        const rightField = arg.get(\"value\");\n        if (rightField) {\n          const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n          if (config && !rightFieldDefinition)\n            badFields.push(rightField);\n          else\n            usedFields.push(rightField);\n        }\n      } else if (arg.get(\"valueSrc\") == \"func\") {\n        _traverse(arg.get(\"value\"));\n      }\n    }\n  };\n\n  _traverse(value);\n\n  return [usedFields, badFields];\n};\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new Immutable.Map());\n\n  // defaults\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value sorce\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseUnsafe = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] >= 3 || v[0] > 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  if (canUseUnsafe) {\n    obj.UNSAFE_componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\n\nconst selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const currentField = current.get(\"field\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator, currentField);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n\n  let canReuseValue = currentField && currentOperator && newOperator && currentValue != undefined\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp)\n    && (currentFieldConfig && newFieldConfig && currentFieldConfig.type == newFieldConfig.type);\n  if (canReuseValue && selectTypes.includes(currentFieldConfig.type) && changedProp == \"field\") {\n    // different fields of select types has different listValues\n    canReuseValue = false;\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget);\n    if (!canReuseWidget)\n      canReuseValue = false;\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  const valueSources = getValueSourcesForFieldOp(config, newField, newOperator);\n  \n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS(v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = typeof parentRuleGroupPath == \"string\" ? parentRuleGroupPath.split(fieldSeparator) : parentRuleGroupPath;\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps ? fieldOps[0] : null;\n};\n\nexport const getFieldPath = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || cnf && last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig && fieldConfig.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      // if (!config.widgets[widget]) {\n      //   continue;\n      // }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources && fieldConfig.valueSources.indexOf(widgetValueSrc) != -1;\n        if (opConfig && opConfig.valueSources && opConfig.valueSources.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config._fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config._fieldsCntByType[fieldDefinition.type] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config._funcsCntByType)\n        canAdd = canAdd && !!config._funcsCntByType[fieldDefinition.type];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null, leftFieldForFunc = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const formatFieldName = (field, config, meta, parentField = null) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\n","import Immutable, { Map } from \"immutable\";\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n//Do sets have same values?\nexport const eqSet = function (as, bs) {\n  if (as.size !== bs.size) return false;\n  for (var a of as) if (!bs.has(a)) return false;\n  return true;\n};\n\n\n//Do arrays have same values?\nexport const eqArrSet = function (arr1, arr2) {\n  return eqSet(new Set(arr1), new Set(arr2));\n};\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null); // object or array\nconst listValue = (v, title) => (isObject(v) ? v : {value: v, title: (title !== undefined ? title : v)});\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => listValue(v));\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(listValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => listValue(v));\n    return values.find(v => (v.value === value)) || values.find(v => (`${v.value}` === value));\n  } else {\n    return listValues[value] !== undefined ? listValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(listValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(listValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const defaultTreeDataMap = {id: \"value\", pId: \"parent\", rootPId: undefined};\n\n// converts from treeData to treeDataSimpleMode format (https://ant.design/components/tree-select/)\n// ! modifies value of `treeData`\nexport const flatizeTreeData = (treeData) => {\n  const tdm = defaultTreeDataMap;\n\n  let rind;\n  let len;\n\n  const _flatize = (node, root, lev) => {\n    if (node.children) {\n      if (lev == 1)\n        node[tdm.pId] = tdm.rootPId; //optional?\n      const childrenCount = node.children.length;\n      for (let c of node.children) {\n        c[tdm.pId] = node[tdm.id];\n        rind++;\n        root.splice(rind, 0, c); //instead of just push\n        len++;\n        _flatize(c, root, lev + 1);\n      }\n      delete node.children;\n      if (childrenCount == 0) {\n        root.splice(rind, 1);\n        rind--;\n        len--;\n      }\n    }\n  };\n\n  if (Array.isArray(treeData)) {\n    len = treeData.length;\n    for (rind = 0 ; rind < len ; rind++) {\n      const c = treeData[rind];\n      if (!isObject(c))\n        continue;\n      if (c[tdm.pId] !== undefined && c[tdm.pId] != tdm.rootPId)\n        continue; //not lev 1\n      _flatize(c, treeData, 1);\n    }\n  }\n  \n  return treeData;\n};\n\nconst getPathInListValues = (listValues, value) => {\n  const tdm = defaultTreeDataMap;\n  const it = getItemInListValues(listValues, value);\n  const parentId = it ? it[tdm.pId] : undefined;\n  const parent = parentId ? listValues.find(v => v[tdm.id] === parentId) : undefined;\n  return parent ? [parent.value, ...getPathInListValues(listValues, parent.value)] : [];\n};\n\nconst getChildrenInListValues = (listValues, value) => {\n  const tdm = defaultTreeDataMap;\n  const it = getItemInListValues(listValues, value);\n  return it ? listValues.filter(v => v[tdm.pId] === it[tdm.id]).map(v => v.value) : [];\n};\n\n// ! modifies value of `treeData`\nconst extendTreeData = (treeData, fieldSettings, isMulti) => {\n  for (let node of treeData) {\n    node.path = getPathInListValues(treeData, node.value);\n    if (fieldSettings.treeSelectOnlyLeafs != false) {\n      const childrenValues = getChildrenInListValues(treeData, node.value);\n      if (!isMulti) {\n        node.selectable = (childrenValues.length == 0);\n      }\n    }\n  }\n  return treeData;\n};\n\nexport const normalizeListValues = (listValues, type, fieldSettings) => {\n  const isTree = [\"treeselect\", \"treemultiselect\"].includes(type);\n  const isMulti = [\"multiselect\", \"treemultiselect\"].includes(type);\n  if (isTree) {\n    listValues = listValuesToArray(listValues);\n    listValues = flatizeTreeData(listValues);\n    listValues = extendTreeData(listValues, fieldSettings, isMulti);\n  }\n  return listValues;\n};\n\nexport const removePrefixPath = (selectedPath, parentPath) => {\n  if (!selectedPath)\n    return selectedPath;\n  let isPrefix = true;\n  for (let i = 0 ; i < parentPath.length ; i++) {\n    const part = parentPath[i];\n    if (selectedPath[i] !== undefined && part == selectedPath[i]) {\n      //ok\n    } else {\n      isPrefix = false;\n      break;\n    }\n  }\n  return isPrefix ? selectedPath.slice(parentPath.length) : selectedPath;\n};\n\nexport const isJsonLogic = (logic) => (\n  typeof logic === \"object\" // An object\n  && logic !== null // but not null\n  && !Array.isArray(logic) // and not an array\n  && Object.keys(logic).length === 1 // with exactly one key\n);\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","import Immutable  from \"immutable\";\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} path\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removePathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path) {\n    const itemPath = path.push(item.get(\"id\"));\n    if (item.get(\"path\")) {\n      newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should me OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId) : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      _height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, getItemInListValues, logger, immutableEqual} from \"../utils/stuff\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      return validatedTree;\n    }\n  };\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (!availOps) {\n    console.warn(`Type of field ${field} is not supported`);\n    operator = null;\n  } else if (operator && availOps.indexOf(operator) == -1) {\n    if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n      // Backward compatibility: is_empty #494\n      operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n      console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n      properties = properties.set(\"operator\", operator);\n    } else {\n      console.warn(`Operator ${operator} is not supported for field ${field}`);\n      operator = null;\n    }\n  }\n  if (operator == null) {\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  }\n\n  const newSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  const isComplete = field && operator && value && !value.includes(undefined);\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isComplete && removeIncompleteRules)\n    item = undefined;\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn(...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? \n      `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig.type;\n    const jsType = wConfig.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n\n    if (valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !fieldSettings.listValues) { //tip: can skip tye check for listValues\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const listValues = asyncListValues || fieldSettings.listValues;\n      if (listValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, listValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const funcConfig = getFuncConfig(config, funcKey);\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType)\n          return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n        for (const argKey in funcConfig.args) {\n          const argConfig = funcConfig.args[argKey];\n          const args = fixedValue.get(\"args\");\n          const argVal = args ? args.get(argKey) : undefined;\n          const fieldDef = getFieldConfig(config, argConfig);\n          const argValue = argVal ? argVal.get(\"value\") : undefined;\n          const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n          if (argValue !== undefined) {\n            const [argValidError, fixedArgVal] = validateValue(\n              config, leftField, fieldDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n            );\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix) {\n            return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n          }\n        }\n      } else return [`Unknown function ${funcKey}`, value];\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","var map = {\n\t\"./es-us\": 73099,\n\t\"./es-us.js\": 73099,\n\t\"./ru\": 21753,\n\t\"./ru.js\": 21753,\n\t\"moment/locale/es-us\": 73099,\n\t\"moment/locale/es-us.js\": 73099,\n\t\"moment/locale/ru\": 21753,\n\t\"moment/locale/ru.js\": 21753\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13837;"],"names":["Proximity","handleChange","value","props","setOption","parseInt","this","defaults","options","config","optionLabel","optionPlaceholder","customProps","minProximity","maxProximity","optionTextBefore","readonly","settings","widgets","defaultProximity","proximity","undefined","showLabels","selectedProximity","get","proxValues","range","map","item","title","Select","select","factory","className","listValues","setValue","placeholder","children","PureComponent","propTypes","PropTypes","defaultProps","delta","isFuncArg","immValue","valueSrc","immValueError","valueError","asyncListValues","isSpecialRange","fieldDefinition","widgetDefinition","widget","widgetValueLabel","valueLabels","textSeparators","setValueHandler","field","operator","parentField","parentFuncs","id","groupId","widgetFactory","fieldWidgetProps","isConst","valueSources","length","defaultValue","fieldSettings","widgetProps","Object","assign","label","placeholders","labelYes","labelNo","Array","isArray","v","getTitleInListValues","join","funcArgDummyOpDef","cardinality","Widget","_setValue","widgetType","__isInternal","oldRange","_onChangeValueSrc","srcKey","setValueSrc","renderWidget","meta","leftField","values","iValues","aField","valueLabel","widgetLabel","key","WidgetFactory","pick","renderValueSources","setValueSrcHandler","valueSourcesInfo","ValueSources","valueSourcesOptions","sourceLabel","valueSourcesPopupTitle","renderSep","sepText","sepLabel","renderWidgetDelta","useOnPropsChanged","onPropsChanged","nextProps","prevProps","k","filter","ch","getMeta","simpleField","fieldFunc","fieldArg","valueSrcs","isForRuleGruop","isCaseValue","func","arg","iValueSrcs","Immutable","getFieldConfig","defaultWidget","getWidgetForFieldOp","operatorDefinition","getWidgetsForFieldOp","getOperatorConfig","isSpecialRangeForSrcField","isTrueSpecialRange","getValueSourcesForFieldOp","getFieldWidgetConfig","singleWidget","type","getValueLabel","bind","name","toUpperCase","Col","dummyFn","DragIcon","xmlns","viewBox","fill","width","height","d","ConfirmFn","Cmp","useConfirm","confirmFn","ValueField","needUpdateItems","items","needUpdateMeta","getItems","canCompareFieldWithField","fieldSeparator","parentFieldPath","split","parentFieldConfig","sourceFields","subfields","fields","filteredFields","filterFields","buildOptions","customPlaceholder","fieldPlaceholder","fieldSeparatorDisplay","selectedKey","isFieldSelected","leftFieldWidgetField","leftFieldWidgetFieldProps","valuePlaceholder","currField","selectedOpts","selectedKeys","getFieldPath","selectedPath","selectedLabel","getFieldLabel","partsLabels","getFieldPathLabels","selectedFullLabel","selectedAltLabel","label2","leftFieldFullkey","clone","expectedType","leftFieldConfig","_filter","list","path","rightFieldKey","subpath","concat","rightFieldFullkey","rightFieldConfig","canUse","fn","keys","optGroupLabel","prefix","fieldKey","fullLabel","altLabel","tooltip","hideForCompare","grouplabel","o","fieldOpts","maxLabelsLength","fieldParts","last","truncateString","renderField","renderProps","setField","FuncSelect","canUseFuncForField","filteredFuncs","filterFuncs","funcs","funcPlaceholder","selectedFuncKey","isFuncSelected","currFunc","getFuncConfig","getFuncLabel","getFuncPathLabels","funcKey","funcFullkey","funcConfig","returnType","includes","funcOpts","funcParts","renderFunc","FuncWidget","setFunc","setArgValue","argKey","argVal","argDefinition","funcDefinition","args","setArgValueSrc","argValSrc","renderFuncSelect","selectProps","funcLabel","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","getIn","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderSeps","renderBracketBefore","renderBrackets","renderBracketAfter","renderFuncArgs","_delta","_widgetType","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","e","target","uuid","id2","checked","disabled","onChange","style","display","htmlFor","maxLength","textValue","val","fullWidth","maxRows","valueFormat","use12Hours","dtValue","moment","format","Date","allowCustomValues","multiple","multiselect","i","opt","selected","push","getMultiSelectValues","omit","mapListValues","hasValue","min","max","step","numberValue","Number","customInputProps","input","customSliderProps","slider","renderOptions","postfix","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","isDummyFn","onClick","btnLabel","info","onOk","okText","cancelText","confirm","VanillaProvider","VanillaBooleanWidget","Widgets","VanillaTextWidget","VanillaTextAreaWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaMultiSelectWidget","VanillaSelectWidget","VanillaNumberWidget","VanillaSliderWidget","ValueFieldWidget","ProximityOperator","Operators","mongoFormatOp1","mop","mc","_op","useExpr","valueType","opDef","operatorOptions","fieldDef","$field","startsWith","mv","mongoFormatOp2","mops","valueTypes","operators","equal","labelForFormat","sqlOp","spelOp","spelOps","reversedOp","formatOp","op","isForDisplay","opStr","mongoFormatOp","jsonLogic","elasticSearchQueryType","not_equal","isNotOp","less","less_or_equal","greater","greater_or_equal","like","escapeRegExp","_jsonLogicIsRevArgs","not_like","starts_with","ends_with","between","valFrom","first","valTo","spelFormatOp","validateValues","not_between","is_empty","sqlFormatOp","empty","sqlEmptyValue","mongoEmptyValue","is_not_empty","is_null","is_not_null","select_equals","select_not_equals","select_any_in","select_not_any_in","multiselect_equals","SqlString","jsonLogic2","vals","multiselect_not_equals","val1","val2","prox","aVal1","aVal2","some","filteredSize","all","fullSize","none","stringifyForDisplay","toString","conjunctions","AND","mongoConj","jsonLogicConj","sqlConj","spelConj","spelConjs","reversedConj","formatConj","conj","size","sqlFormatConj","spelFormatConj","omitBrackets","OR","text","jsType","formatValue","wgtDef","JSON","stringify","spelFormatValue","regex","spelEscape","sqlFormatValue","toJS","mongoFormatValue","textarea","number","isFloat","isInteger","valLabel","valsLabels","isCallable","res","spelFixList","date","dateFormat","useKeyboard","dateVal","toDate","isValid","time","timeFormat","elasticSearchFormatValue","queryType","fieldName","script","source","params","datetime","boolean","rightFieldDef","showSearch","case_value","spelImportValue","types","defaultOperator","mainWidget","opProps","defaultSettings","formatField","parts","formatSpelField","partsExt","ind","parent","isSpelVariable","sqlFormatReverse","q","spelFormatReverse","formatReverse","revOperatorDefinition","formatAggr","whereStr","aggrField","aggrFieldDef","cond","rightField","customFieldSelectProps","defaultSliderWidth","defaultSelectWidth","defaultSearchWidth","defaultMaxRows","VanillaFieldSelect","VanillaConjs","VanillaButton","VanillaButtonGroup","VanillaValueSources","vanillaConfirm","VanillaSwitch","renderOperator","renderConjs","renderSwitch","renderButton","renderButtonGroup","renderProvider","renderConfirm","renderSwitchPrefix","renderSize","canReorder","canRegroup","showLock","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","groupActionsPosition","setOpOnChangeField","groupOperators","convertableWidgets","locale","fieldLabel","operatorLabel","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","removeRuleConfirmOptions","removeGroupConfirmOptions","defaultGroupConjunction","groupVarKey","altVarKey","lockedOp","nonCheckedIcon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","defaultFilterOptions","createFilterOptions","emptyArray","selectedValue","groupBy","filterOptionsConfig","filterOptionsFn","useListValuesAutocomplete","debounceTimeout","open","onOpen","onClose","onInputChange","inputValue","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionLabel","showCheckboxes","rest","inputWidth","customAutocompleteProps","minWidth","useStyles","makeStyles","theme","classesChip","root","marginTop","marginBottom","useStylesChip","classes","FormControl","Autocomplete","disableCloseOnSelect","freeSolo","loading","readOnly","renderInput","TextField","InputProps","endAdornment","CircularProgress","color","renderTags","getTagProps","option","index","Chip","renderOption","specialValue","renderTitle","Checkbox","icon","marginRight","filterOptions","filtered","itemsToListValues","level","repeat","groupTitle","flat","Infinity","paper","padding","spacing","MaterialTextWidget","inputProps","MaterialTextAreaWidget","multiline","MaterialDateWidget","Picker","KeyboardDatePicker","DatePicker","formatSingleValue","MaterialDateTimeWidget","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","indexOf","timeValue","views","MaterialSelectWidget","autoWidth","displayEmpty","renderValue","shift","getListValueTitle","MenuItem","MaterialNumberWidget","MaterialSliderWidget","marks","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","_e","newValue","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","alignItems","MaterialRangeWidget","useEffect","valueFrom","valueTo","setTimeout","oneValue","handleInputBlur","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MaterialBooleanWidget","Typography","component","Grid","container","Switch","MaterialMultiSelectWidget","selectedValues","selectedTitles","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","findLabel","pop","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","_asyncValues","MaterialButton","typeToOnlyIcon","Delete","Add","typeToIcon","typeToColor","IconButton","Button","startIcon","MaterialButtonGroup","MaterialConjs","ButtonGroup","disableElevation","variant","MaterialSwitch","checkedLabel","hideLabel","showLabel","Lock","LockOpen","FormControlLabel","control","MaterialValueSources","React","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharp","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","Radio","MaterialConfirm","description","confirmationText","cancellationText","then","MaterialUseConfirm","MaterialProvider","settingsTheme","settingsLocale","themeConfig","material","createTheme","base","withProviders","M","utils","MomentUtils","ThemeProvider","MaterialWidgets","BasicConfig","asyncFetch","rangeslider","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","asyncFetchMeta","setAsyncFetchMeta","loadingCnt","setLoadingCnt","isLoadingMore","setIsLoadingMore","setInputValue","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToArray","mergeListValues","canInitialLoad","canLoadMore","hasMore","canShowLoadMore","listValueToOption","fetchListValues","isLoadMore","offset","pageSize","newAsyncFetchCnt","current","newMeta","nValues","assumeHasMore","realNewMeta","loadListValues","x","loadListValuesDebounced","debounce","find","newSelectedListValues","getListValue","customItem","newSelectedValues","newInputValue","onSearch","onDropdownVisibleChange","isSpecialValue","valueOrOption","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","properties","groupPath","canAddNewRule","isDefaultCase","origState","addItem","defaultGroupProperties","merge","setIn","expandTreePath","defaultRuleProperties","fixPathsInTree","removeGroup","removeItem","parentPath","slice","hasChildren","fixEmptyGroupsInTree","isEmptyTree","removeRule","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","deleteIn","setLock","lock","removeIsLockedInTree","conjunction","_addChildren1","children1","reduce","it","id1","it1","defaultItemProperties","Error","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","rootType","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","getTotalRulesCountInTree","canAdd","isLastDefaultCase","newChildren","newChildrenWithLast","mergeIn","moveItem","fromPath","toPath","placement","from","getItemByPath","sourcePath","sourceChildren","to","targetPath","constants","isSameParent","isSourceInsideTarget","deepEqual","toArray","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","updateIn","expandTreeSubpath","_oldChildren","withMutations","r","entries","itemId","set","newField","showErrorMessage","currentType","currentProperties","wasRuleGroup","newFieldConfig","isRuleGroup","isRuleGroupExt","mode","isChangeToAnotherType","currentOperator","currentOperatorOptions","lastOp","newOperator","availOps","getOperatorsForField","strategy","getFirstOperator","console","warn","getNewValueForFieldOp","canReuseValue","newValueSrc","newValueType","operatorCardinality","groupProperties","newValueError","newOperatorOptions","defaultOperatorOptions","setOperator","currentField","operatorConfig","isInternalValueChange","calculatedValueType","calculateValueType","validateValue","validateError","fixedValue","w","fieldWidgetDefinition","_","vs","jsValues","rangeValidateError","isLastEmpty","isLastError","tree","setOperatorOption","checkEmptyGroups","fieldConfig","emptyDrag","dragging","y","h","mousePos","dragStart","getActionMeta","action","actionTypesToIgnore","mapValues","applyToJS","affectedField","getField","setTree","addRule","ruleType","toImmutableList","addDefaultCaseGroup","addCaseGroup","addGroup","setDragProgress","setDragStart","setDragEnd","Query","shouldComponentUpdate","liteShouldComponentUpdate","nextValue","oldValidatedTree","validatedTree","_updateActions","getMemoizedTree","dispatch","actions","bindActionCreators","oldConfig","newTree","newConfig","immutableEqual","__lastAction","renderBuilder","__isInternalValueChange","Component","ConnectedQuery","connect","context","displayName","QueryContainer","prevValue","getMemoizedConfig","createConfigMemo","createValidationMemo","reducer","emptyTree","defaultRoot","emptyState","unset","actionMeta","treeStoreReducer","store","createStore","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","setState","Promise","resolve","get_children","QueryWrapper","classNames","require","GroupOrRule","handleDraggerMouseDown","nodeId","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","top","left","cn","ref","isLocked","Operator","selectedField","selectedOperator","pickBy","_opts","isOpSelected","ops","sort","a","b","OperatorWrapper","selectedFieldPartsLabels","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","Field","hideForSelect","FieldWrapper","classname","OperatorOptions","operatorDefinitions","optionsFactory","basicOptionsProps","optionsCmp","Rule","ConnectedRuleContainer","removeSelf","nextState","prevState","should","pureShouldComponentUpdate","chs","changed","isInDraggingTempo","hasError","reordableNodesCnt","totalRulesCnt","parentReordableNodesCnt","createRuleContainer","RuleContainer","Draggable","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","immutableFieldsMode","immutableOpsMode","immutableValuesMode","opOpts","renderBeforeWidget","renderAfterWidget","renderRuleError","oneValueError","error","onMouseDown","immutableGroupsMode","Btn","canShrinkValue","BtnGrp","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","Group","ConnectedGroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isRoot","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","renderBeforeActions","BeforeActions","renderAfterActions","AfterActions","renderItem","isEmptyCurrentGroup","isEmpty","isEmptyGroup","isEmptyRule","group","rule","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","renderHeader","renderActions","toList","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","isParentLocked","_item","Conjs","GroupContainer","RuleGroupActions","RuleGroup","RuleGroupExtActions","RuleGroupExt","renderGroupField","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","c","totalCasesCnt","casesToReorder","canLeaveEmptyCase","canRegroupCases","cnt","getTotalReordableNodesCountInTree","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","toObject","result","typeMap","rule_group","rule_group_ext","switch_group","case_group","isRequired","createSortableContainer","Builder","CanMoveFn","_getEventTarget","__mocked_window","document","window","treeEl","closest","classList","add","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","moved","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","getFlatTree","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","el","contains","querySelector","els","getElementsByClassName","node","overflowY","scrollHeight","_isScrollable","parentNode","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","bottom","hovCNodeEl","trgCoord","right","__mocked_hov_container","hovNodeEl","elementFromPoint","rootGroupContainer","firstChild","isGroup","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","lev","isSamePos","dragLeftOffset","dragLev","Math","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","prev","caseId","nextCaseId","next","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","collapsed","isInside","tmp","toParentII","canMove","levs","curLev","allLevs","closestDragLev","logger","move","fromII","newLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","parentType","isLockedChange","isLastFromCase","_height","newRulesInTargetCase","leafsCount","ConnectedSortableContainer","SortableContainer","_updPath","Map","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","defaultConjunction","rules","condition","hasUndefinedValues","fieldType","typeConfig","formatFieldName","secondField","ruleQuery","jsonLogicFormat","errors","logic","data","ff","p","pdef","ret","conjunctionDefinition","toLowerCase","groupField","groupOperator","groupOperatorDefinition","formattedValue","formatItemValue","isGroup0","resultQuery","formattedField","count","var","formatLogic","isRev","iValueSrc","iValueType","iValue","oldUsedFields","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","fv","operatorDef","formatFunc","formattedArgs","argConfig","argValue","argValueSrc","formattedArgVal","formattedArgsArr","funcName","isMethod","jsonLogicIsMethod","obj","parentFieldDef","parentFieldName","varName","jsonLogicVar","buildFnToFormatOp","formatteOp","isReverseArgs","rangeOps","eqOps","isObject","mongodbFormat","_mongodbFormat","returnErrors","parents","_not","_canWrapExpr","_fieldName","_value","hasParentRuleGroup","realParentPath","groupFieldName","groupFieldDef","canHaveEmptyChildren","f","canShort","acc","totalQuery","filterQuery","as","_f","fvUseExpr","wrapExpr","formatRightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","mongoFormatFunc","sqlFormat","_sqlFormat","revOpDef","canFormatOp","canFormatRevOp","valFieldDefinition","sqlFunc","sqlFormatFunc","argsStr","spelFormat","_spelFormat","formatSwitch","formatCase","cases","filteredCases","isRuleGroupArray","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getSize","groupValue","formatExpression","objectIsFirstArg","sop","realOp","expectedValueType","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","spelFunc","spelFormatFunc","queryString","conjStr","aggrArgs","_operator","fop","returnArgs","revOperatorDef","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","buildEsRule","opConfig","widgetConfig","parameters","textField","determineField","elasticSearchScript","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","elasticSearchFormat","recursiveFxn","childrenArray","valueSeq","occurrence","combinator","determineOccurrence","resultFlat","buildEsGroup","getTree","immutableTree","light","children1AsArray","getLightTree","loadTree","serTree","isImmutableTree","isTree","jsTreeToImmutable","parse","checkTree","extendedConfig","extendConfig","validateTree","isValidTree","getTreeBadFields","fromJS","outValue","toOrderedMap","valueJs","child","arrayUniq","arr","Set","loadFromJsonLogic","logicTree","_loadFromJsonLogic","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","opKey","opk","conjKey","fk","varKeys","isJsonLogic","beforeErrorsCnt","isEmptyOp","convertField","convertFunc","convertVal","convertConj","convertOp","afterErrorsCnt","floor","m","s","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","normalizeField","argsArr","opts","funcKeys","fc","jsonLogicImport","parsed","argKeys","complexFields","complexFieldsGroupAncestors","fromEntries","ancs","fp","usedRuleGroups","topLevelFieldsFilter","groupToId","groupAncestors","at","parentFieldParts","shallowEqual","gf","gfc","j","splice","wrapInDefaultConjRuleGroup","parseRule","arity","_parseRule","isRevArgs","opKeys","jlField","having","init","op2","parseRes","havingVals","canRev","convertedArgs","asyncListValuesArr","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","compileRes","SpelExpressionEvaluator","_compiledExpression","convertCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","isThis","itype","getRaw","getValue","flatizeTernary","functionName","qid","cls","isVar","_processTernaryChildren","tern","if_val","else_val","forEach","convertPath","isError","convertArg","spel","parentSpel","literalTypes","string","null","groupFieldParts","_groupField","fullParts","isVariable","isUnary","funcToOpMap","buildRule","dateString","timeString","buildCaseValueConcat","buildRuleGroup","groupFilter","groupFieldValue","groupOpRule","compareArgs","leftSource","rightSource","leftVal","rightVal","isBetweenNormal","isBetweenRev","isBetween","isNumbers","isSameSource","oneSpel","convertChildren","fieldObj","opArg","ws","buildSimpleSwitch","caseI","buildCase","sw","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","widgetDef","importCaseValue","normVal","normErrors","NOW","jsonLogicCustomOps","now","RELATIVE_DATETIME","dim","abs","date_add","replace","mainWidgetProps","plus","minus","day","week","month","year","LOWER","str","UPPER","LINEAR_REGRESSION","coef","bias","Utils","BasicUtils","Export","Import","simulateAsyncFetch","cPageSize","delay","search","ceil","currentOffset","newOffset","debug","sleep","toStart","old","newFiltered","av","merged","lv","configKeys","configStore","configId","pickConfig","findConfig","savedConfig","findExtended","extendAndStore","__configId","_fieldsCntByType","_funcsCntByType","typesConfig","_extendTypeConfig","_extendTypesConfig","__fieldNames","_extendFieldsConfig","_extendFuncArgsConfig","defineProperty","enumerable","writable","typeWidgetConfig","typeWidgetOperators","excludeOperators","mergeArraysSmart","subconfig","_extendFieldConfig","funcDef","tmpIsOptional","reverse","argDef","isOptional","excludeOperatorsForField","keysToPutInFieldSettings","normalizeListValues","_isFuncArg","excludeOperatorsForType","fieldWidgetConfig","shouldIncludeOperators","preferWidgets","addOperators","computedFieldName","computeFieldName","getFieldRawConfig","fieldsKey","subfieldsKey","targetFields","part","pathKey","fConfig","l","unshift","fieldStr","getFuncArgConfig","mergeWith","objValue","srcValue","_key","_object","_source","_stack","widgetOpProps","fieldWidgetOpProps","mergedOpConfig","valueFieldSettings","mergedConfig","defaultField","canGetFirst","parentRuleGroupPath","getFirstField","fieldOperators","fieldDefaultOperator","setDefaultFieldAndOp","conjs","defaultRule","trim","charAt","substring","escapeLike","any_start","any_end","escape","spelEscapeString","spelInlineList","javaType","jt","escapedVals","numberJavaTypes","numberToFloat","arrayToArray","isFinite","isNaN","spelFormatConcat","spelImportConcat","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","_checkFuncValue","firstValueSrc","_argConfig","_config","self","canUseUnsafe","UNSAFE_componentWillReceiveProps","componentWillReceiveProps","actionCreators","actionCreator","selectTypes","changedProp","canFix","isEndValue","currentValueSrc","currentValueType","currentAsyncListValues","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","currentFieldConfig","currentWidget","newWidget","currentValueWidget","newValueWidget","canReuseWidget","firstWidgetConfig","valueFixes","valueErrors","vType","vSrc","isValidSrc","fixValue","dropValue","_ignore","getFirstDefined","vt","parentPathArr","firstField","keysPath","fieldOps","onlyKeys","_curr","parentParts","_getWidgetsAndSrcsForFieldOp","widgetValueSrc","canAddValueSrc","widgetWeight","wg","w1","w2","minCnt","filteredValueSrcs","tableName","fieldPartsCopy","_default","n","useWordBoundary","subString","substr","lastIndexOf","v1","v2","equals","deep","shallowEqualArrays","shallowEqualObjects","arrA","arrB","len","isEqual","objA","objB","aKeys","bKeys","listValue","listValuesObj","listValuesArr","getItemInListValues","mapFn","defaultTreeDataMap","pId","rootPId","getPathInListValues","tdm","parentId","getChildrenInListValues","isMulti","treeData","treeSelectOnlyLeafs","childrenValues","selectable","extendTreeData","rind","_flatize","childrenCount","flatizeTreeData","removePrefixPath","isPrefix","isImmutable","arr1","arr2","orig","after","before","newOp","rel","relOp","isDev","process","devMode","verbose","log","getLogger","suffix","interpose","skip","apply","removePathsInTree","_processNode","itemPath","removeIn","_childId","currPath","currId","constructor","childId","allChildrenGone","curr","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","childrenIds","_child","isLeaf","itemsBefore","leaf","_top","itemsAfter","subinfo","prevId","nextId","badFields","getSwitchValues","caseValue","query_builder_seed","timePart","getTime","random","isTypeOf","typeOf","originalTree","validateAndFixTree","_oldTree","removeEmptyGroups","removeIncompleteRules","validateItem","oldChildren","sanitized","submeta","validateGroup","oldSerialized","newSerialized","isComplete","validateRule","isRawValue","validError","validateFieldValue","validateFuncValue","validateNormalValue","validResult","validateValueInList","List","goodVals","badVals","vv","goodValues","badValues","plural","wConfig","wType","_valueSrc","leftFieldStr","rightFieldStr","argValidError","fixedArgVal","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}